(window.webpackJsonp=window.webpackJsonp||[]).push([[185],{544:function(t,s,v){"use strict";v.r(s);var _=v(9),a=Object(_.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/chst365/bolgImgs/imgs/topImgs/287.jpg",alt:""}})]),t._v(" "),s("h1",{attrs:{id:"面试官-说说你对git-stash-的理解-应用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#面试官-说说你对git-stash-的理解-应用场景"}},[t._v("#")]),t._v(" 面试官：说说你对git stash 的理解？应用场景？")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.vue-js.com/83ddf210-fd6f-11eb-bc6f-3f06e1491664.png",alt:""}})]),t._v(" "),s("h2",{attrs:{id:"一、是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、是什么"}},[t._v("#")]),t._v(" 一、是什么")]),t._v(" "),s("p",[t._v("stash，译为存放，在 git 中，可以理解为保存当前工作进度，会把暂存区和工作区的改动进行保存，这些修改会保存在一个栈上")]),t._v(" "),s("p",[t._v("后续你可以在任何时候任何分支重新将某次的修改推出来，重新应用这些更改的代码")]),t._v(" "),s("p",[t._v("默认情况下，"),s("code",[t._v("git stash")]),t._v("会缓存下列状态的文件：")]),t._v(" "),s("ul",[s("li",[t._v("添加到暂存区的修改（staged changes）")]),t._v(" "),s("li",[t._v("Git跟踪的但并未添加到暂存区的修改（unstaged changes）")])]),t._v(" "),s("p",[t._v("但以下状态的文件不会缓存：")]),t._v(" "),s("ul",[s("li",[t._v("在工作目录中新的文件（untracked files）")]),t._v(" "),s("li",[t._v("被忽略的文件（ignored files）")])]),t._v(" "),s("p",[t._v("如果想要上述的文件都被缓存，可以使用"),s("code",[t._v("-u")]),t._v("或者"),s("code",[t._v("--include-untracked")]),t._v("可以工作目录新的文件，使用"),s("code",[t._v("-a")]),t._v("或者"),s("code",[t._v("--all")]),t._v("命令可以当前目录下的所有修改")]),t._v(" "),s("h2",{attrs:{id:"二、如何使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、如何使用"}},[t._v("#")]),t._v(" 二、如何使用")]),t._v(" "),s("p",[t._v("关于"),s("code",[t._v("git stash")]),t._v("常见的命令如下：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("git stash")])]),t._v(" "),s("li",[s("p",[t._v("git stash save")])]),t._v(" "),s("li",[s("p",[t._v("git stash list")])]),t._v(" "),s("li",[s("p",[t._v("git stash pop")])]),t._v(" "),s("li",[s("p",[t._v("git stash apply")])]),t._v(" "),s("li",[s("p",[t._v("git stash show")])]),t._v(" "),s("li",[s("p",[t._v("git stash drop")])]),t._v(" "),s("li",[s("p",[t._v("git stash clear")])])]),t._v(" "),s("h3",{attrs:{id:"git-stash"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-stash"}},[t._v("#")]),t._v(" git stash")]),t._v(" "),s("p",[t._v("保存当前工作进度，会把暂存区和工作区的改动保存起来")]),t._v(" "),s("h3",{attrs:{id:"git-stash-save"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-stash-save"}},[t._v("#")]),t._v(" git stash save")]),t._v(" "),s("p",[s("code",[t._v("git stash save")]),t._v("可以用于存储修改.并且将"),s("code",[t._v("git")]),t._v("的工作状态切回到"),s("code",[t._v("HEAD")]),t._v("也就是上一次合法提交上")]),t._v(" "),s("p",[t._v("如果给定具体的文件路径,"),s("code",[t._v("git stash")]),t._v("只会处理路径下的文件.其他的文件不会被存储，其存在一些参数：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("--keep-index 或者 -k 只会存储为加入 git 管理的文件")])]),t._v(" "),s("li",[s("p",[t._v("--include-untracked 为追踪的文件也会被缓存,当前的工作空间会被恢复为完全清空的状态")])]),t._v(" "),s("li",[s("p",[t._v("-a 或者 --all 命令可以当前目录下的所有修改，包括被 git 忽略的文件")])])]),t._v(" "),s("h3",{attrs:{id:"git-stash-list"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-stash-list"}},[t._v("#")]),t._v(" git stash list")]),t._v(" "),s("p",[t._v("显示保存进度的列表。也就意味着，"),s("code",[t._v("git stash")]),t._v("命令可以多次执行，当多次使用"),s("code",[t._v("git stash")]),t._v("命令后，栈里会充满未提交的代码，如下：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.vue-js.com/50216dd0-fccf-11eb-bc6f-3f06e1491664.png",alt:""}})]),t._v(" "),s("p",[t._v("其中，"),s("code",[t._v("stash@{0}")]),t._v("、"),s("code",[t._v("stash@{1}")]),t._v("就是当前"),s("code",[t._v("stash")]),t._v("的名称")]),t._v(" "),s("h3",{attrs:{id:"git-stash-pop"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-stash-pop"}},[t._v("#")]),t._v(" git stash pop")]),t._v(" "),s("p",[s("code",[t._v("git stash pop")]),t._v(" 从栈中读取最近一次保存的内容，也就是栈顶的"),s("code",[t._v("stash")]),t._v("会恢复到工作区")]),t._v(" "),s("p",[t._v("也可以通过 "),s("code",[t._v("git stash pop")]),t._v(" + "),s("code",[t._v("stash")]),t._v("名字执行恢复哪个"),s("code",[t._v("stash")]),t._v("恢复到当前目录")]),t._v(" "),s("p",[t._v("如果从"),s("code",[t._v("stash")]),t._v("中恢复的内容和当前目录中的内容发生了冲突，则需要手动修复冲突或者创建新的分支来解决冲突")]),t._v(" "),s("h3",{attrs:{id:"git-stash-apply"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-stash-apply"}},[t._v("#")]),t._v(" git stash apply")]),t._v(" "),s("p",[t._v("将堆栈中的内容应用到当前目录，不同于"),s("code",[t._v("git stash pop")]),t._v("，该命令不会将内容从堆栈中删除")]),t._v(" "),s("p",[t._v("也就说该命令能够将堆栈的内容多次应用到工作目录中，适应于多个分支的情况")]),t._v(" "),s("p",[t._v("同样，可以通过"),s("code",[t._v("git stash apply")]),t._v(" + "),s("code",[t._v("stash")]),t._v("名字执行恢复哪个"),s("code",[t._v("stash")]),t._v("恢复到当前目录")]),t._v(" "),s("h3",{attrs:{id:"git-stash-show"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-stash-show"}},[t._v("#")]),t._v(" git stash show")]),t._v(" "),s("p",[t._v("查看堆栈中最新保存的"),s("code",[t._v("stash")]),t._v("和当前目录的差异")]),t._v(" "),s("p",[t._v("通过使用"),s("code",[t._v("git stash show -p")]),t._v("查看详细的不同")]),t._v(" "),s("p",[t._v("通过使用"),s("code",[t._v("git stash show stash@{1}")]),t._v("查看指定的"),s("code",[t._v("stash")]),t._v("和当前目录差异")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.vue-js.com/458620a0-fccf-11eb-bc6f-3f06e1491664.png",alt:""}})]),t._v(" "),s("h3",{attrs:{id:"git-stash-drop"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-stash-drop"}},[t._v("#")]),t._v(" git stash drop")]),t._v(" "),s("p",[s("code",[t._v("git stash drop")]),t._v(" + "),s("code",[t._v("stash")]),t._v("名称表示从堆栈中移除某个指定的stash")]),t._v(" "),s("h3",{attrs:{id:"git-stash-clear"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-stash-clear"}},[t._v("#")]),t._v(" git stash clear")]),t._v(" "),s("p",[t._v("删除所有存储的进度")]),t._v(" "),s("h2",{attrs:{id:"三、应用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、应用场景"}},[t._v("#")]),t._v(" 三、应用场景")]),t._v(" "),s("p",[t._v("当你在项目的一部分上已经工作一段时间后，所有东西都进入了混乱的状态， 而这时你想要切换到另一个分支或者拉下远端的代码去做一点别的事情")]),t._v(" "),s("p",[t._v("但是你创建一次未完成的代码的"),s("code",[t._v("commit")]),t._v("提交，这时候就可以使用"),s("code",[t._v("git stash")])]),t._v(" "),s("p",[t._v("例如以下场景：")]),t._v(" "),s("p",[t._v("当你的开发进行到一半,但是代码还不想进行提交 ,然后需要同步去关联远端代码时.如果你本地的代码和远端代码没有冲突时,可以直接通过"),s("code",[t._v("git pull")]),t._v("解决")]),t._v(" "),s("p",[t._v("但是如果可能发生冲突怎么办.直接"),s("code",[t._v("git pull")]),t._v("会拒绝覆盖当前的修改，这时候就可以依次使用下述的命令：")]),t._v(" "),s("ul",[s("li",[t._v("git stash")]),t._v(" "),s("li",[t._v("git pull")]),t._v(" "),s("li",[t._v("git stash pop")])]),t._v(" "),s("p",[t._v("或者当你开发到一半，现在要修改别的分支问题的时候，你也可以使用"),s("code",[t._v("git stash")]),t._v("缓存当前区域的代码")]),t._v(" "),s("ul",[s("li",[t._v("git stash：保存开发到一半的代码")]),t._v(" "),s("li",[t._v("git commit -m '修改问题'")]),t._v(" "),s("li",[t._v("git stash pop：将代码追加到最新的提交之后")])])])}),[],!1,null,null,null);s.default=a.exports}}]);