(window.webpackJsonp=window.webpackJsonp||[]).push([[144],{506:function(t,a,s){"use strict";s.r(a);var r=s(9),e=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/chst365/bolgImgs/imgs/topImgs/151.jpg",alt:""}})]),t._v(" "),a("h1",{attrs:{id:"面试官-说说你了解的js数据结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#面试官-说说你了解的js数据结构"}},[t._v("#")]),t._v(" 面试官：说说你了解的js数据结构？")]),t._v(" "),a("h2",{attrs:{id:"什么是数据结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是数据结构"}},[t._v("#")]),t._v(" 什么是数据结构？")]),t._v(" "),a("p",[t._v("数据结构是计算机存储、组织数据的方式。\n数据结构意味着接口或封装：一个数据结构可被视为两个函数之间的接口，或者是由数据类型联合组成的存储内容的访问方法封装。")]),t._v(" "),a("p",[t._v("我们每天的编码中都会用到数据结构\n数组是最简单的内存数据结构\n下面是常见的数据结构：")]),t._v(" "),a("ol",[a("li",[t._v("数组（Array）")]),t._v(" "),a("li",[t._v("栈（Stack）")]),t._v(" "),a("li",[t._v("队列（Queue）")]),t._v(" "),a("li",[t._v("链表（Linked List）")]),t._v(" "),a("li",[t._v("字典")]),t._v(" "),a("li",[t._v("散列表（Hash table）")]),t._v(" "),a("li",[t._v("树（Tree）")]),t._v(" "),a("li",[t._v("图（Graph）")]),t._v(" "),a("li",[t._v("堆（Heap）")])]),t._v(" "),a("h2",{attrs:{id:"数组-array"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组-array"}},[t._v("#")]),t._v(" 数组（Array）")]),t._v(" "),a("p",[t._v("数组是最最基本的数据结构，很多语言都内置支持数组。\n数组是使用一块连续的内存空间保存数据，保存的数据的个数在分配内存的时候就是确定的。")]),t._v(" "),a("p",[t._v("在日常生活中，人们经常使用列表：待办事项列表、购物清单等。")]),t._v(" "),a("p",[t._v("而计算机程序也在使用列表，在下面的条件下，选择列表作为数据结构就显得尤为有用：\n数据结构较为简单\n不需要在一个长序列中查找元素，或者对其进行排序\n反之，如果数据结构非常复杂，列表的作用就没有那么大了。")]),t._v(" "),a("h2",{attrs:{id:"栈-stack"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#栈-stack"}},[t._v("#")]),t._v(" 栈（Stack）")]),t._v(" "),a("p",[t._v("栈是一种遵循后进先出（LIFO）原则的有序集合\n在栈里，新元素都接近栈顶，旧元素都接近栈底。\n每次加入新的元素和拿走元素都在顶部操作\n"),a("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/13253432-ddcb884374470d2c?imageMogr2/auto-orient/strip%7CimageView2/2/format/webp",alt:""}})]),t._v(" "),a("h2",{attrs:{id:"队列-queue"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#队列-queue"}},[t._v("#")]),t._v(" 队列（Queue）")]),t._v(" "),a("p",[t._v("队列是遵循先进先出（FIFO，也称为先来先服务）原则的一组有序的项\n队列在尾部添加新元素，并从顶部移除元素\n最新添加的元素必须排在队列的末尾\n"),a("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/13253432-55ad7c7db40d3796?imageMogr2/auto-orient/strip%7CimageView2/2/format/webp",alt:""}})]),t._v(" "),a("h2",{attrs:{id:"链表-linked-list"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#链表-linked-list"}},[t._v("#")]),t._v(" 链表（Linked List）")]),t._v(" "),a("p",[t._v("链表也是一种列表，已经设计了数组，为什么还需要链表呢？\nJavaScript中数组的主要问题时，它们被实现成了对象，\n与其他语言（比如C++和Java）的数组相对，效率很低。\n如果你发现数组在实际使用时很慢，就可以考虑使用链表来代替它。")]),t._v(" "),a("p",[t._v("使用条件：\n链表几乎可以用在任何可以使用一维数组的情况中。\n如果需要随机访问，数组仍然是更好的选择。\n"),a("img",{attrs:{src:"https://raw.githubusercontent.com/zoro-web/blog/master/img/lian.jpg",alt:""}})]),t._v(" "),a("h2",{attrs:{id:"字典"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字典"}},[t._v("#")]),t._v(" 字典")]),t._v(" "),a("p",[t._v("字典是一种以键-值对存储数据的数据结构，js中的Object类就是以字典的形式设计的。JavaScript可以通过实现字典类，让这种字典类型的对象使用起来更加简单，字典可以实现对象拥有的常见功能，并相应拓展自己想要的功能，而对象在JavaScript编写中随处可见，所以字典的作用也异常明显了。")]),t._v(" "),a("h2",{attrs:{id:"散列表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#散列表"}},[t._v("#")]),t._v(" 散列表")]),t._v(" "),a("p",[t._v("也称为哈希表，特点是在散列表上插入、删除和取用数据都非常快。\n为什么要设计这种数据结构呢？\n用数组或链表存储数据，如果想要找到其中一个数据，需要从头进行遍历，因为不知道这个数据存储到了数组的哪个位置。")]),t._v(" "),a("p",[t._v("散列表在JavaScript中可以基础数组去进行设计。\n数组的长度是预先设定的，所有元素根据和该元素对应的键，保存在数组的特定位置，这里的键和对象的键是类型的概念。\n使用散列表存储数组时，通过一个散列函数将键映射为一个数字，这个数字的范围是0到散列表的长度。")]),t._v(" "),a("p",[t._v("即使使用一个高效的散列函数，依然存在将两个键映射为同一个值得可能，这种现象叫做碰撞。常见碰撞的处理方法有：开链法和线性探测法（具体概念有兴趣的可以网上自信了解）\n使用条件：\n可以用于数据的插入、删除和取用，不适用于查找数据\n"),a("img",{attrs:{src:"https://raw.githubusercontent.com/zoro-web/blog/master/img/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20170820211406.png",alt:""}})])])}),[],!1,null,null,null);a.default=e.exports}}]);